<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<script type="text/javascript" src="js/jquery-2.1.3.js"></script>
<script type="text/javascript" src="js/jcanvas.min.js"></script>
<script type="text/javascript" src="js/quintus.js"></script>
<script type="text/javascript" src="js/quintus_ui.js"></script>
<script type="text/javascript" src="js/quintus_anim.js"></script>
<script type="text/javascript" src="js/quintus_sprites.js"></script>
<script type="text/javascript" src="js/quintus_scenes.js"></script>
<script type="text/javascript" src="js/quintus_input.js"></script>
<script type="text/javascript" src="js/quintus_2d.js"></script>
<script type="text/javascript" src="js/quintus_touch.js"></script>
<script type="text/javascript" src="js/quintus_tmx.js"></script>
<script type="text/javascript" src="js/quintus_audio.js"></script>
</head>
<body>
<script type="text/javascript">

/**
* Quintus library initialization
*/
var Q = Quintus()
	.include( "Sprites, Scenes, Input, 2D, TMX, Touch, Anim, UI" )
	.setup({ maximize: true })
	.controls()
	.touch()

	
/**
* Settings
*/
Q.gravityY -= 400
	
/**
* Player class definition
*/
Q.Sprite.extend( "Player", {
	init: function( parameters ) {
		this._super( parameters, {
			health: 100,
			asset: "player.png",
		});
		
		this.add( "2d, platformerControls" );
	}
});

/**
* Menu sene
*/
Q.scene( "Menu", function( stage ) {
	var container = stage.insert( new Q.UI.Container({
		x: Q.width / 2, 
		y: Q.height / 2, 
		fill: "rgba(0,255,0,0.5)"
	}));
		
	var buttonStart = container.insert( new Q.UI.Button({
		x: 30,
		y: 30,
		fill: "#CCCCCC",
		label: "Start Game"
	}));

	buttonStart.on( "click", function() {
		Q.clearStages();
		Q.stageScene( "Level_1" );
	});

	container.fit( 20 );
});

/**
* Level 1 scene
*/
Q.scene( "Level_1", function( stage ) {
	stage.insert( new Q.Repeater({ 
		asset: "level_1_background.jpg",
	    speedX: 0.5,     
	    speedY: 0.5,      
	    scale: 1 
	}));
	
	var player = new Q.Player();
	
	stage.insert( player );
	
	stage.collisionLayer( new Q.TileLayer({ 
		dataAsset: "level_1.json",
        sheet:     "tiles" 
	}));
	
	stage.add( "viewport" ).follow( player, { x:true, y:false } );
	
	stage.viewport.offsetX = -200;
    stage.viewport.scale = 1.0;
});


/**
* Loading components and game loop
*/
Q.load( "tiles.jpg, level_1.json, level_1_background.jpg, player.png", function() {
	Q.sheet( "tiles","tiles.jpg", { 
		tilew: 50, 
		tileh: 50
	});
	Q.stageScene( "Menu" );
});



</script>
</body>
</html>